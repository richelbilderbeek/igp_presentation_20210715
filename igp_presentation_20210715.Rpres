Update
========================================================
author: Rich√®l J.C. Bilderbeek
date: 2021-07-15
autosize: true

[https://github.com/richelbilderbeek/igp_presentation_20210715](https://github.com/richelbilderbeek/igp_presentation_20210715) ![](CC-BY-NC-SA.png)

<style>
.small-code pre code {
  font-size: 1em;
}
</style>

Setup
========================================================

 * Describe GCAE
 * Share proof of concept results
   * Spoiler: the encouraging results are rather contrived
   * Could use ideas here

***

![](gcae_example_architecture.png)

Introduction
========================================================

Quantitive trait associations, e.g. protein levels, are important.

Works well when:

 * 1 SNP -> 1 phenotype, e.g PLINK
 * More SNPs linearly determine a phenotype, e.g. SKAT

Research question
========================================================

Can we find novel associations using machine learning?

Novel == un(der)detected using existing methods

***

![](professor_oak.png)

GCAE
========================================================

![](gcae_example_architecture.png)

Problem
========================================================

 * Dimensionality reduction
 * PCA is linear, where data is complex
 * Deep learning learn non-linear and complex features

PCA is useful
========================================================

Lao, Oscar, et al. "Correlation between genetic and geographic structure in Europe." Current Biology 18.16 (2008): 1241-1248.

***

![Lao et al., 2008 figure 1](Lao_et_al_fig_1a_20.png)

Potential to do better than PCA
========================================================

Ausmees, Kristiina and Nettelblad, Carl. "A deep learning framework for characterization of genotype data." bioRxiv (2020)

***

![Ausmees and Nettelblad, 2020 figure 3a](Ausmees_and_Nettelblad_fig3a_75.png)

Do better than PCA using GCAE
========================================================

Ausmees, Kristiina and Nettelblad, Carl. "A deep learning framework for characterization of genotype data." bioRxiv (2020)

***

![Ausmees and Nettelblad, 2020 figure 3b](Ausmees_and_Nettelblad_fig3b_75.png)

GCAE
========================================================

Character|Full         |What
---------|-------------|------------------------------
G        |Genomic      |Works on genomic data
C        |Convolutional|Works on processed data
A        |Auto         |Learns by itself
E        |Encoder      |to efficiently encode the data

***

![](gcae_example_architecture.png)

Type of analysis
========================================================

 * Prediction and association
 * Quantitative and binary traits

Research question
========================================================

Can we find novel associations using GCAE?

Novel == un(der)detected using existing methods

***

![](professor_oak.png)

State of GCAE now
========================================================

 * Does not yet allow a trait to be encoded along genotype

Finding novel associations
========================================================

Proof of concept:

 * No association
 * Additive association
 * XOR
 * EXP
 * Your suggestion

***

```{r cache=TRUE}
library(plinkr)
set.seed(314)
mafs <- 0.49
n_individuals <- 1000
```

Random phenotype
========================================================

A phenotype that is completely unrelated to the SNPs investigated

***

![https://upload.wikimedia.org/wikipedia/commons/6/6c/Hans_am_Tretbrett.jpg](Hans_am_Tretbrett.jpg)

Random phenotype
========================================================
class: small-code

```{r cache=TRUE}
snvs <- create_snvs(
  n_individuals = 4
)
calc_random_phenotype <- function(snvs) {
  stats::runif(nrow(snvs))
}
snvs$random <- calc_random_phenotype(snvs)
```

```{r eval=FALSE}
knitr::kable(snvs)
```

***

```{r echo=FALSE,cache=TRUE}
knitr::kable(snvs)
```


Random trait
========================================================
class: small-code

```{r cache=TRUE}
random_trait <- create_custom_trait(
  phenotype = "random",
  mafs = 0.49,
  n_snps = 1,
  calc_phenotype_function =
    calc_random_phenotype
)
random_data <- create_demo_assoc_qt_params(
  traits = random_trait,
  n_individuals = n_individuals
)
```

```{r eval=FALSE}
knitr::kable(
  cbind(
    random_data$ped_table[, -seq(1, 6)],
    random_data$phe_table[, 3]
  )
)
```

***

```{r echo=FALSE,cache=TRUE}
knitr::kable(
  cbind(
    random_data$ped_table[, -seq(1, 6)],
    random_data$phe_table[, 3]
  )
)
```

Associations on random data
========================================================

```{r cache=TRUE}
knitr::kable(assoc_qt(random_data))
```

No association is correctly detected.

Additive phenotype
========================================================

![https://doi.org/10.1016/j.ajhg.2015.01.001](vWFnoFooter.png)

***

Zhu, Zhihong, et al. "Dominance genetic variation contributes little to the missing heritability for human complex traits." The American Journal of Human Genetics 96.3 (2015): 377-385.
Additive phenotype
========================================================
class: small-code

```{r cache=TRUE}
snvs <- create_snvs(
  n_individuals = 4
)
calc_additive_phenotype <- function(snvs) {
  (rowSums(snvs == "C") / 10.0) +
    runif(nrow(snvs), min = 0.0, max = 0.01)
}
snvs$additive <- calc_additive_phenotype(snvs)
```

```{r eval=FALSE}
knitr::kable(snvs)
```

***

```{r echo=FALSE,cache=TRUE}
knitr::kable(snvs)
```

Additive trait
========================================================
class: small-code

```{r cache=TRUE}
additive_trait <- create_custom_trait(
  phenotype = "additive",
  mafs = 0.49,
  n_snps = 1,
  calc_phenotype_function =
    calc_additive_phenotype
)
additive_data <- create_demo_assoc_qt_params(
  traits = additive_trait,
  n_individuals = n_individuals
)
```

```{r eval=FALSE}
knitr::kable(
  cbind(
    additive_data$ped_table[, -seq(1, 6)],
    additive_data$phe_table[, 3]
  )
)
```

***

```{r echo=FALSE,cache=TRUE}
knitr::kable(
  cbind(
    additive_data$ped_table[, -seq(1, 6)],
    additive_data$phe_table[, 3]
  )
)
```

Associations on additive data
========================================================

```{r cache=TRUE}
knitr::kable(assoc_qt(additive_data))
```

Additive associations are detected awesomely!

Exclusive-or phenotype
========================================================

![](xor1b.png)

***

Baron, Ronan, et al. "Elementary arithmetic operations by enzymes: A model for metabolic pathway based computing." Angewandte Chemie International Edition 45.10 (2006): 1572-1576.


Exclusive-or phenotype
========================================================
class: small-code

```{r cache=TRUE}
snvs <- create_snvs(
  n_snps = 2,
  n_individuals = 16
)
calc_xor_phenotype <- function(snvs) {
  if (ncol(snvs) < 4) {
    return(
      rep(3.14, nrow(snvs))
    )
  }
  0.1 * (snvs$snv_1a == snvs$snv_1b &
    snvs$snv_1a != snvs$snv_2a &
    snvs$snv_2a == snvs$snv_2b
  )
}
snvs$xor <- calc_xor_phenotype(snvs)
```

```{r eval=FALSE}
knitr::kable(snvs)
```

***

```{r echo=FALSE,cache=TRUE}
knitr::kable(snvs)
```

Exclusive-or (XOR) trait
========================================================
class: small-code

```{r cache=TRUE}
xor_trait <- create_custom_trait(
  phenotype = "xor",
  mafs = 0.49,
  n_snps = 2,
  calc_phenotype_function =
    calc_xor_phenotype
)
xor_data <- create_demo_assoc_qt_params(
  traits = xor_trait,
  n_individuals = n_individuals
)
```

```{r eval=FALSE}
knitr::kable(
  cbind(
    xor_data$ped_table[, -seq(1, 6)],
    xor_data$phe_table[, 3]
  )
)
```

***

```{r echo=FALSE,cache=TRUE}
knitr::kable(
  cbind(
    xor_data$ped_table[, -seq(1, 6)],
    xor_data$phe_table[, 3]
  )
)
```

Associations on exclusive-or (XOR) data
========================================================

```{r cache=TRUE}
knitr::kable(assoc_qt(xor_data))
```

 * XOR cannot be detected
 * Very artificial example

ML can do exclusive-or (XOR)
========================================================

![](gourle_xor_2_50.png)

***

![](hadrien.png)

Exponential phenotype
========================================================

Exponential

Exponential phenotype
========================================================
class: small-code

```{r cache=TRUE}
snvs <- create_snvs(
  n_snps = 3,
  n_individuals = 16
)
calc_exp_phenotype <- function(snvs) {
  as <- seq(1, ncol(snvs), by = 2)
  bs <- as + 1
  h <- snvs[, as] == snvs[, bs] & snvs[, as] == "C"
  10 ^ rowSums(h)
}
snvs$exp <- calc_exp_phenotype(snvs)
```

```{r eval=FALSE}
knitr::kable(snvs)
```

***

```{r echo=FALSE,cache=TRUE}
knitr::kable(snvs)
```

Exponential trait
========================================================
class: small-code

```{r cache=TRUE}
exp_trait <- create_custom_trait(
  phenotype = "exp",
  mafs = 0.49,
  n_snps = 8,
  calc_phenotype_function =
    calc_exp_phenotype
)
exp_data <- create_demo_assoc_qt_params(
  traits = exp_trait,
  n_individuals = n_individuals
)
```

```{r eval=FALSE}
knitr::kable(
  cbind(
    exp_data$ped_table[, -seq(1, 18)],
    exp_data$phe_table[, 3]
  )
)
```

***

```{r echo=FALSE,cache=TRUE}
knitr::kable(
  cbind(
    exp_data$ped_table[, -seq(1, 12)],
    exp_data$phe_table[, 3]
  )
)
```

Associations on exp data
========================================================

```{r cache=TRUE}
knitr::kable(assoc_qt(exp_data))
```

Features of examples
========================================================

 * Pro: Clear, simple structure
 * Con: Artificial, lacks complex structure

Your example
========================================================

Could you come up with

 * a biologically (more) relevant example
 * that fails now
 * with a complex structure
 * that would convince you of GCAE

I'll be happy try it!

Conclusion
========================================================

 * GCAE appears promising, yet needs work
 * Could use a more convincing proof of concept



